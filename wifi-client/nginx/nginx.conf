user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 1024;
        # multi_accept on;
}


http {

############################_LK_###############################
    server {
    #       listen [::]:80;

            root /var/www/zaxarwifi/wifi-client/dist;
                    index index.html index.htm index.nginx-debian.html;
            server_name lk.a-wifi.ru www.lk.a-wifi.ru;
            location / {
    #               try_files $uri $uri/ =404;
                    try_files $uri $uri/ /index.html;
            }

            location /api {
    #               proxy_pass http://86.62.93.213:6533;
                    proxy_pass http://192.168.1.77:6533;
            }
            location /api {
    #               proxy_pass http://86.62.93.213:6533;
                    proxy_pass http://192.168.1.77:6533;
            }

            location /stream {
    #               proxy_pass http://86.62.93.213:6853;
                    proxy_pass http://192.168.1.77:6853;
                    proxy_set_header Upgrade $http_upgrade;
                    proxy_set_header Connection "Upgrade";
                    proxy_set_header Host $host;
            }


          listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/lk.a-wifi.ru/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/lk.a-wifi.ru/privkey.pem; # managed by Certbot
          include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
          ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }
    server {
        if ($host = www.lk.a-wifi.ru) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


        if ($host = lk.a-wifi.ru) {
            return 301 https://$host$request_uri;
        } # managed by Certbot


            listen 80;
            server_name lk.a-wifi.ru www.lk.a-wifi.ru;
            return 404; #managed by Certbot
    }
############################_API_###############################



    #server {
    #    listen 80 default_server;
    #    server_name _;
    #    return 301 https://$host$request_uri;
    #}


    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

 ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml applic>

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
#
# Wide-open CORS config for nginx
#

}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
